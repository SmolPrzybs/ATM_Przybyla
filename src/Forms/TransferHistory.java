package Forms;

import Services.AccountService;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 * @author mprzybyla
 */
public class TransferHistory extends javax.swing.JDialog {

    /**
     * Creates new form TransferHistoryView
     */
    public TransferHistory(java.awt.Frame parent, boolean modal, int _loggedUserId) {
        super(parent, modal);
        initComponents();
        this.loggedUserId=_loggedUserId;
        
        ArrayList<Entities.TransferHistoryEntity> transferHistory=new ArrayList<Entities.TransferHistoryEntity>();
        transferHistory = AccountService.GetTransfersHistory(AccountService.GetAccountId(this.loggedUserId));
        
        DefaultTableModel tableModel = (DefaultTableModel)TransferHistoryTable.getModel();
        tableModel.setRowCount(0);
        
        DateTimeFormatter formatter = DateTimeFormatter.ISO_DATE_TIME;
        
        int i=0;
        
        while(i<transferHistory.size())
        {
            String convertedOperationDate = transferHistory.get(i).OperationDateTime.format(formatter);
            tableModel.addRow(new Object[]
            {
                "+"+transferHistory.get(i).Received+" PLN",
                "-"+transferHistory.get(i).Sent+" PLN",
                transferHistory.get(i).ReceiverFirstName+" "+ transferHistory.get(i).ReceiverLastName,
                transferHistory.get(i).SenderFirstName+" "+transferHistory.get(i).SenderLastName,
                transferHistory.get(i).AccountBalance+" PLN",
                convertedOperationDate
            
            });
            i++;
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TransferHistoryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TransferHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Otrzymano", "Wys≈Çano", "Odbiorca", "Nadawca", "Stan konta", "Data przelewu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TransferHistoryTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TransferHistoryTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private int loggedUserId;

    /**
     * Get the value of loggedUserId
     *
     * @return the value of loggedUserId
     */
    public int getLoggedUserId() {
        return loggedUserId;
    }

    /**
     * Set the value of loggedUserId
     *
     * @param loggedUserId new value of loggedUserId
     */
    public void setLoggedUserId(int loggedUserId) {
        this.loggedUserId = loggedUserId;
    }
}
